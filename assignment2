##1
makecachematrix <- function (m=matrix())
{
##initialize the inverse property
i<-null
##method to set the matrix
set<-function (matrix)
{
m<<-matrix
i<<-null
}
##method to get the matrix
get<-function()
{
##return the matrix
m
}
##method to set the inverse of the matrix
setinverse <-function(inverse)
{
i<<-inverse
}
##method to get the inverse of the matrix
getinverse <-function ()
{
##return the inverse property
i
}
##return a list of the methods
list(set=set,get=get,
setinverse=setinverse,
getinverse=getinverse)
}

##2

cachesolve<-function(x,...)
{
##return a matrix that is the inverse of 'x'
m<-x$getinverse()
##just return the inverse if its already set
if(!is.null(m)
{
message("getting cached data")
return(m)
}
##get the matrix from our object
data<-x$get()
##calculate the inverse using matrix multiplication
m<-solve(data)
##set the inverse to the object
x$setinverse(m)
##return the matrix
m
}
